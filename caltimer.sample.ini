# Example ini file for scheduler.py
# Defines some default values and the available switches
# The ini file needs to be saved under /etc/caltimer/

[DEFAULT]
# Define default values for the RC codesend (Comag switches)
protocol    : 1
pulselength : 350
# available types = rc, gpio, dummy
type        : rc
# maximum GPIO pulse length
max_pulse   : 10
# path to the RF433 binary
rf433       : /opt/433Utils/RPi_utils/codesend
# GPIO pin of RF transmitter
gpio  : 17

[LOGGING]
# set logging level
# CRITICAL > ERROR > WARNING INFO > DEBUG > NOTSET
loglevel     : INFO
# Logfile, if undefined it will be streamed to stderr
#logfile     : /log/scheduler.log

[CALENDAR]
# Calendar and timzone settings
caldav      : http://user:password@Nextcloud.address/remote.php/dav/
calname     : CalendarName
latitude    : 53.3845
longitude   : 9.9805
localOffset : 2
# Time interval per scheduler in minutes
interval    : 5

# Definition of the available RC switch sockets
# Each entry needs 4 key values:
#   oncode, offcode, protocol and pulselength
# The command format used to send RC codes is:
# codesend decimalcode [protocol] [pulselength]

[ZAP 1]
oncode      : 349491
offcode     : 349500
protocol    : 1
pulselength : 186

[Zap 2]
oncode      : 349635
offcode     : 349644
protocol    : 1
pulselength : 186
  
[Zap 3]
oncode      : 349955
offcode     : 349964
protocol    : 1
pulselength : 186

[Zap 4]
oncode      : 351491
offcode     : 351500
protocol    : 1
pulselength : 186

[Zap 5]
oncode      : 357635
offcode     : 357644
pulselength : 186

[Comag 5]
type        : comag
# System code 5 digits
system      : 01000
#Receiver code A-E
receiver    : 00101

[Comag generic]
# Comag using the default switch type 'rc'
oncode      : 4543553
offcode     : 4543556
protocol    : 1
pulselength : 350

[Dummy 1]
# dummy switch for testing the scheduler
type        : dummy

[Pi 15]
# Use Raspberry Pi GPIO 15 as a switch output
# The pin ID is based on teh BCM numbering
type        : gpio
pin         : 15

[Pulse 18]
# Use Raspberry Pi GPIO 18 as a pulsed switch output
# The pulse length for the on/off event is defined in seconds (as float)
type        : pulse
pin         : 18
on          : 0.5
off         : 2
